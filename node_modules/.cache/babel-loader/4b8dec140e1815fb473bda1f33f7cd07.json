{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADARSH\\\\01-starting-project\\\\src\\\\store\\\\Cart-Provider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CartContext from './CartContext';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    if (state.items.map(item => item === action.item)) {\n      state.items.filter(item => item === action.i);\n    } else {\n      const updatedItems = state.items.concat(action.item);\n      const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updatedAmount\n      };\n    }\n  } // if(action.type === 'REMOVE'){\n  //   const updatedItems = state.items.filter(each=> each.id !== action.id);\n  //   const updatedAmount = state.totalAmount - ac\n  // }\n\n\n  return defaultCartState;\n};\n\nfunction CartProvider(props) {\n  _s();\n\n  const [CartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: CartState.items,\n    totalAmount: CartState.totalAmount,\n    addItems: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n}\n\n_s(CartProvider, \"34xT7aZiATGkxaKfcoiFXwwZ3ok=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/ADARSH/01-starting-project/src/store/Cart-Provider.js"],"names":["React","CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","map","item","filter","i","updatedItems","concat","updatedAmount","price","amount","CartProvider","props","CartState","dispatchCartAction","addItemHandler","removeItemHandler","id","cartContext","addItems","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAGA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACvB,QAAGF,KAAK,CAACH,KAAN,CAAYM,GAAZ,CAAgBC,IAAI,IAAGA,IAAI,KAAKH,MAAM,CAACG,IAAvC,CAAH,EAAgD;AAC5CJ,MAAAA,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAmBD,IAAI,IAAGA,IAAI,KAAKH,MAAM,CAACK,CAA1C;AACH,KAFD,MAEK;AACH,YAAMC,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACG,IAA1B,CAArB;AACA,YAAMK,aAAa,GAAGT,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYM,KAAZ,GAAkBT,MAAM,CAACG,IAAP,CAAYO,MAAxE;AACA,aAAM;AACJd,QAAAA,KAAK,EAACU,YADF;AAEJT,QAAAA,WAAW,EAACW;AAFR,OAAN;AAID;AACF,GAZ+B,CAahC;AACA;AACA;AACA;;;AACF,SAAOb,gBAAP;AACC,CAlBD;;AAoBA,SAASgB,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAE3B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCpB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMoB,cAAc,GAAEZ,IAAD,IAAQ;AAC3BW,IAAAA,kBAAkB,CAAC;AAACb,MAAAA,IAAI,EAAC,KAAN;AAAYE,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AAED,GAHD;;AAIA,QAAMa,iBAAiB,GAAEC,EAAD,IAAM;AAC5BH,IAAAA,kBAAkB,CAAC;AAACb,MAAAA,IAAI,EAAC,QAAN;AAAegB,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBtB,IAAAA,KAAK,EAACiB,SAAS,CAACjB,KADE;AAElBC,IAAAA,WAAW,EAACgB,SAAS,CAAChB,WAFJ;AAGlBsB,IAAAA,QAAQ,EAACJ,cAHS;AAIlBK,IAAAA,UAAU,EAACJ;AAJO,GAApB;AAOA,sBAAQ,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACAN,KAAK,CAACS;AADN;AAAA;AAAA;AAAA;AAAA,UAAR;AAGD;;GAtBQV,Y;;KAAAA,Y;AAwBT,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport CartContext from './CartContext';\r\nimport { useReducer } from 'react';\r\n\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n}   \r\n\r\nconst cartReducer=(state,action)=>{\r\n  if(action.type === 'ADD'){\r\n    if(state.items.map(item=> item === action.item)){\r\n        state.items.filter(item=> item === action.i)\r\n    }else{\r\n      const updatedItems = state.items.concat(action.item);\r\n      const updatedAmount = state.totalAmount + action.item.price*action.item.amount;\r\n      return{\r\n        items:updatedItems,\r\n        totalAmount:updatedAmount\r\n      }\r\n    }\r\n  }\r\n  // if(action.type === 'REMOVE'){\r\n  //   const updatedItems = state.items.filter(each=> each.id !== action.id);\r\n  //   const updatedAmount = state.totalAmount - ac\r\n  // }\r\nreturn defaultCartState;\r\n}\r\n\r\nfunction CartProvider(props) {\r\n\r\n  const [CartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItemHandler=(item)=>{\r\n    dispatchCartAction({type:'ADD',item:item});\r\n\r\n  }\r\n  const removeItemHandler=(id)=>{\r\n    dispatchCartAction({type:'REMOVE',id:id});\r\n  }\r\n\r\n  const cartContext = {\r\n    items:CartState.items,\r\n    totalAmount:CartState.totalAmount,\r\n    addItems:addItemHandler ,\r\n    removeItem:removeItemHandler,\r\n  }\r\n\r\n  return  <CartContext.Provider value={cartContext}>\r\n         {props.children}\r\n         </CartContext.Provider>\r\n}\r\n\r\nexport default CartProvider;\r\n  "]},"metadata":{},"sourceType":"module"}